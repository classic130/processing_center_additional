<?xml version="1.0"?>
<GDOME_APIGEN>
  <SRCDIR>../../libgdome/traversal/</SRCDIR>
  <OUTFILE>gdome-traversal.c</OUTFILE>
  <APIPREFIX>gdome</APIPREFIX>
  <MODPREFIX>trv</MODPREFIX>
  <OUTFILEHEAD><![CDATA[/* -*- Mode: C; indent-tabs-mode: t; c-basic-offset: 2; tab-width: 2 -*- */
/* gdome-traversal.c
 *
 * CopyRight (C) 2002 Paolo Casarini <paolo@casarini.org>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

#include "gdome-traversal.h"
#include "gdome-trv-nodeiterator.h"
#include "gdome-trv-nodefilter.h"
#include "gdome-trv-treewalker.h"

]]></OUTFILEHEAD>

  <INTERFACE NAME="NodeFilter" PREFIX="nf" SRC="gdome-trv-nodefilter.c">
    <METHOD TYPE="GdomeNodeFilter *" NAME="mkref" RAW="YES" STANDARD="NO">
      <PARAM TYPE="short (*) (GdomeNodeFilter *self, GdomeNode *n, GdomeException *exc)" NAME="callback"/>
    </METHOD>
    <METHOD TYPE="void" NAME="ref">
      <EXCEPTION TYPE="NULL_POINTER_ERR" ON="self == NULL"/>
    </METHOD>
    <METHOD TYPE="void" NAME="unref">
      <EXCEPTION TYPE="NULL_POINTER_ERR" ON="self == NULL"/>
    </METHOD>
    <METHOD TYPE="gpointer" NAME="query_interface">
      <EXCEPTION TYPE="NULL_POINTER_ERR" ON="self == NULL"/>
      <PARAM TYPE="const char *" NAME="interface"/>
    </METHOD>
    <METHOD TYPE="short" NAME="acceptNode">
      <EXCEPTION TYPE="NULL_POINTER_ERR" ON="self == NULL"/>
      <PARAM TYPE="GdomeNode *" NAME="n"/>
    </METHOD>
  </INTERFACE>

  <INTERFACE NAME="NodeIterator" PREFIX="ni" SRC="gdome-trv-nodeiterator.c">
    <ATTR READONLY="YES" TYPE="GdomeNode *" NAME="root">
      <EXCEPTION TYPE="NULL_POINTER_ERR" ON="self == NULL"/>
    </ATTR>
    <ATTR READONLY="YES" TYPE="guint32" NAME="whatToShow">
      <EXCEPTION TYPE="NULL_POINTER_ERR" ON="self == NULL"/>
    </ATTR>
    <ATTR READONLY="YES" TYPE="GdomeNodeFilter *" NAME="filter">
      <EXCEPTION TYPE="NULL_POINTER_ERR" ON="self == NULL"/>
    </ATTR>
    <ATTR READONLY="YES" TYPE="GdomeBoolean" NAME="expandEntityReference">
      <EXCEPTION TYPE="NULL_POINTER_ERR" ON="self == NULL"/>
    </ATTR>
    <METHOD TYPE="void" NAME="ref">
      <EXCEPTION TYPE="NULL_POINTER_ERR" ON="self == NULL"/>
    </METHOD>
    <METHOD TYPE="void" NAME="unref">
      <EXCEPTION TYPE="NULL_POINTER_ERR" ON="self == NULL"/>
    </METHOD>
    <METHOD TYPE="gpointer" NAME="query_interface">
      <EXCEPTION TYPE="NULL_POINTER_ERR" ON="self == NULL"/>
      <PARAM TYPE="const char *" NAME="interface"/>
    </METHOD>
    <METHOD TYPE="GdomeNode *" NAME="nextNode">
      <EXCEPTION TYPE="NULL_POINTER_ERR" ON="self == NULL"/>
    </METHOD>
    <METHOD TYPE="GdomeNode *" NAME="previousNode">
      <EXCEPTION TYPE="NULL_POINTER_ERR" ON="self == NULL"/>
    </METHOD>
    <METHOD TYPE="void" NAME="detach">
      <EXCEPTION TYPE="NULL_POINTER_ERR" ON="self == NULL"/>
    </METHOD>
  </INTERFACE>

</GDOME_APIGEN>
