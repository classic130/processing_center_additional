///////////////////////////////////////////////////////////////////////////////
//																			 //
//	File Name		:	VSPS_Defines.h										 //
//																			 //
//	Description		:	The file contains some #defines used in the project. //
//																			 //
//	Date			:	Sept 13, 1999										 //
//																			 //
//	Author			:	Anand Abhyankar										 //
//																			 //
///////////////////////////////////////////////////////////////////////////////

#ifndef		__PROTECTED_STORAGE_DEFINES_H__
#define		__PROTECTED_STORAGE_DEFINES_H__

#define		HEAP_INITIAL_SIZE						102400	//	100K
#define		HEAP_MAXIMUM_SIZE						1048576	//	1M


#define		STORAGE_FILE_CREATE						1
#define		STORAGE_FILE_OPEN						2

#define		APPLICATION_ENCRYPTED					1
#define		APPLICATION_DECRYPTED					2

#define		VSPS_FILE_MUTEX_NAME					L"VSPS_Mutex_Name"
#define		VSPS_SLEEP_MILLISECONDS					100

#define		VSPS_WRITE_MUTEX_NAME					L"VSPS_Write_Mutex_Name"
//#define		VSPS_READ_SEMAPHORE_NAME				"VSPS_Read_Semaphore_Name"
#define		VSPS_READ_MUTEX_NAME					L"VSPS_Read_Mutex_Name"
//#define		VSPS_FILE_TIME

#define		VSPS_ENCRYPTION_PADDING					"VeriSign Protected Storage"
#define		VSPS_ENCRYPTION_PADDING_LENGTH			26

#define		ADD_APPLICATION							1

#define		PS_FILE									1
#define		PS_MEMORY								2

#define		PS_CHANGED_AFTER_INITIALIZED			1

//#define		MAX_READ_SEMAPHORE_COUNT				10
//#define		INITIAL_READ_SEMAPHORE_COUNT			10

#define		MAX_WRITE_SEMAPHORE_COUNT				1
#define		INITIAL_WRITE_SEMAPHORE_COUNT			1

#define		BEGIN_CALLED							1
#define		BEGIN_READ_CALLED						1
#define		BEGIN_WRITE_CALLED						1

#define		NO_BLOCK_RETURN_ERROR					1
#define		BLOCK_FOR_X_SECONDS						2
#define		BLOCK_WITHOUT_TIME_OUT					3

#define		SEMAPHORE_IS_BLOCKED					1
#define		MUTEX_IS_BLOCKED						2

#define		MEMORY_MAPPED_FILE_NAME					L"VSPS_Memory_Mapped_File_Name"
#define		MEMORY_MAPPED_FILE_SIZE					4096

#define		READ_PROCESS							1
#define		WRITE_PROCESS							2

#define		UPDATE_ONLY_PLAINTEXT					1
#define		UPDATE_ONLY_PROTECTED					2
#define		UPDATE_ALL_IF_POSSIBLE					3	//	if password is provided then update both else 
														//	update only plaintext

#define		SALT_LENGTH								8
#define		SHA1_HASH_LENGTH						20
#define		RANDOM_BLOCK_SIZE						64


//	Error codes:
#define		E_VS_FAIL								0x80008000
#define		E_VS_INVALIDARG							0x80008001
#define		E_VS_OUT_OF_MEMORY						0x80008002
#define		E_VS_MUTEX_ERROR						0x80008003
#define		E_VS_DB_ALREADY_OPEN					0x80008004
#define		E_VS_INITIALIZE_NOT_CALLED				0x80008005
#define		E_VS_NOT_INITIALIZED					0x80008006
#define		E_VS_PASSWORD_TIMEOUT					0x80008007
#define		E_VS_BAD_PASSWORD						0x80008008
#define		E_VS_MUTEX								0x80008009
#define		E_VS_SEMAPHORE							0x8000800A
#define		E_VS_BEGIN_NOT_CALLED					0x8000800B
#define		E_VS_STORAGE_CORRUPT					0x8000800C
#define		E_VS_PASSWORD_NOT_PROVIDED				0x8000800D
#define		E_VS_MORE_DATA							0x8000800E

#define		E_VS_CERT_ALREADY_EXISTS				0x80008010
#define		E_VS_CERT_OUT_OF_RANGE					0x80008011
#define		E_VS_INVALID_CERT_PREF					0x80008012
#define		E_VS_INVALID_CERT_PTR					0x80008013

#define		E_VS_APP_ALREADY_EXISTS					0x80008020
#define		E_VS_INVALID_APP						0x80008021
#define		E_VS_INVALID_APP_PREF					0x80008022

#define		E_VS_PVK_ALREADY_EXISTS					0x80008030
#define		E_VS_INVALID_PVK						0x80008031

#define		E_VS_INFO_BLOB_ALREADY_EXISTS			0x80008040
#define		E_VS_INVALID_INFO_BLOB					0x80008041

#define		E_VS_HASH								0x80008050
#define		E_VS_ENCRYPT							0x80008051
#define		E_VS_DECRYPT							0x80008052

#define		E_VS_WRONG_KEY_TYPE						0x80008060




#define		E_CANNOT_ADD_WRITE						0x80008060
#define		E_CANNOT_ADD_READ						0x80008061

//	Success codes:
#define		VS_SUCCESS								0x0


//	The constants that go in the protected storage

#define		VS_VERISIGN_CONSTANT_STRING				L"This file is generated by VeriSign, Inc. Do NOT edit."	//	NOTE: If this string is changed then also change the VS_VERISIGN_CONSTANT_STRING_LENGTH  accordingly
#define		VS_VERISIGN_CONSTANT_STRING_LENGTH		106


//
//	Anand		May 03, 2001
//
//	only the VSPS_VERSION_FIRST_NUMBER was actually used to indicate the version of the profile.
//	the profile contains 2 parts
//	plain text (unencrypted) and encrypted
//
//	the profile can be accessed without providing the password in which case only the plain text
//	portion of the profile can be accessed. due the this the plain text and the protected
//	section of the profile can be upgraded separately.
//
//	the VSPS_VERSION_FIRST_NUMBER had the following values:
//	1: version 1
//	2: version 2 - stronger password is used
//	and the VSPS_VERSION_SECOND_NUMBER had value 0 used so far.
//
//	the new simder fixed the bug where octet string were reversed. in order to read the profiles
//	created using the older profile, we are planning to rely on the version number.
//
//	the problem is that the plain text and the protected portion of the profile can be upgraded
//	for this simder fix separately depending on whether the password is provided or not.
//
//	so the VSPS_VERSION_FIRST_NUMBER is used to indicate if the protected section is upgraded
//	using the new simder or not. and the VSPS_VERSION_SECOND_NUMBER is used to indicate if the
//	plain text section of the profile is upgraded using the new simder or not.
//

//#define		VSPS_VERSION_FIRST_NUMBER				2
#define		VSPS_VERSION_FIRST_NUMBER_1				1	//	started with this. this was version 1

#define		VSPS_VERSION_FIRST_NUMBER_2				2	//	version 2. stronger password was used
														//	to update from version 1 to version 2
														//	the profile was to be opened with a
														//	password and begin-end write session
														//	must be called

#define		VSPS_VERSION_FIRST_NUMBER_3				3	//	this is version 3. the stronger password
														//	is used and the simder fixes for the
														//	octet string are done.
														//	the path can be v1->v3 or v1->v2->v3
														//	if its v1->v3 then both the fixes are
														//	applied at the same time.
														//	in order for the simder fix the profile
														//	needs to be opned with password and
														//	begin-end write session must be called

#define		VSPS_VERSION_FIRST_NUMBER_4				4	//	this is version 4. It supports access 
														//	control lists for protected/encrypted 
														//	data.

// Modified by - Infosys Technologies Ltd. 
// Change Request - CR#21529
// Description - Create a new version number for the protected storage. The new version# would be 6.
// CR#21529 Begin
// Date Modified - July 8, 2004

//  -----  Commented the current version of the PS ----- //


// #define		VSPS_VERSION_FIRST_NUMBER				5	//	this is version 5. It uses fixed key to
														//	encrypt/decrypt protected data in roaming 
														//	profiles. This is needed to support Password
														//  Reset feature in Roaming 6.0. The entire Roaming
														//  profile will be encrypted in the roaming client 
														//  library again. 
//  ----------------------Commenting ends --------------//

#define		VSPS_VERSION_FIRST_NUMBER_5				5	//	this is version 5. It uses fixed key to
														//	encrypt/decrypt protected data in roaming 
														//	profiles. This is needed to support Password
														//  Reset feature in Roaming 6.0. The entire Roaming
														//  profile will be encrypted in the roaming client 
														//  library again. 

#define		VSPS_VERSION_FIRST_NUMBER				6	//	this is version 6. It uses fixed key to
														//	encrypt/decrypt protected data in roaming 
														//	profiles. This is needed to support Password
														//  Reset feature in Roaming 6.0. The entire Roaming
														//  profile will be encrypted in the roaming client 
														//  library again. 


// CR#21529 End

//#define		VSPS_VERSION_SECOND_NUMBER				1
#define		VSPS_VERSION_SECOND_NUMBER_1			0	//	it started with this. this was supposed
														//	to be the version of the PTA which
														//	created the profile. however
														//	this will be used to indicate the
														//	state (version) of the unencrypted
														//	portion of the profile. it starts with
														//	the value 3

#define		VSPS_VERSION_SECOND_NUMBER				1	//	this means that the simder fix for octet
														//	string is applied to the unencrypted
														//	portion of the profile.
														//	the profile must be opned with or without
														//	a password and the begin-end write
														//	session must be called.

#define		VSPS_VERSION_THIRD_NUMBER				0
#define		VSPS_VERSION_FOURTH_NUMBER				0


#define		VSPTA_VERSION_FIRST_NUMBER				4
#define		VSPTA_VERSION_SECOND_NUMBER				0
#define		VSPTA_VERSION_THIRD_NUMBER				0
#define		VSPTA_VERSION_FOURTH_NUMBER				0

#define		VSPS_PASSWORD_STRENGTH					1

		//  Use fixed RC4 key for roaming profiles
#define		VSPS_ROAMING_KEY_LEN					16
#define		VSPS_ROAMING_KEY						"1234567890123456"

#endif