/* DO NOT EDIT THIS FILE - it is machine generated */
#include "jri.h"

/* Header for class java/lang/StringBuffer */

#ifndef _java_lang_StringBuffer_H_
#define _java_lang_StringBuffer_H_

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

struct java_lang_String;
struct java_lang_Object;
struct java_lang_StringBuffer;
struct java_lang_Class;

/*******************************************************************************
 * Class java/lang/StringBuffer
 ******************************************************************************/

typedef struct java_lang_StringBuffer java_lang_StringBuffer;

#define classname_java_lang_StringBuffer	"java/lang/StringBuffer"

#define class_java_lang_StringBuffer(env) \
	((struct java_lang_Class*)JRI_FindClass(env, classname_java_lang_StringBuffer))

/*******************************************************************************
 * Public Methods
 ******************************************************************************/

#ifdef DEBUG

/*** public <init> ()V ***/
extern JRI_PUBLIC_API(struct java_lang_StringBuffer*)
java_lang_StringBuffer_new(JRIEnv* env, struct java_lang_Class* clazz);

/*** public <init> (I)V ***/
extern JRI_PUBLIC_API(struct java_lang_StringBuffer*)
java_lang_StringBuffer_new_1(JRIEnv* env, struct java_lang_Class* clazz, jint a);

/*** public <init> (Ljava/lang/String;)V ***/
extern JRI_PUBLIC_API(struct java_lang_StringBuffer*)
java_lang_StringBuffer_new_2(JRIEnv* env, struct java_lang_Class* clazz, struct java_lang_String *a);

/*** public length ()I ***/
extern JRI_PUBLIC_API(jint)
java_lang_StringBuffer_length(JRIEnv* env, struct java_lang_StringBuffer* self);

/*** public capacity ()I ***/
extern JRI_PUBLIC_API(jint)
java_lang_StringBuffer_capacity(JRIEnv* env, struct java_lang_StringBuffer* self);

/*** public ensureCapacity (I)V ***/
extern JRI_PUBLIC_API(void)
java_lang_StringBuffer_ensureCapacity(JRIEnv* env, struct java_lang_StringBuffer* self, jint a);

/*** public setLength (I)V ***/
extern JRI_PUBLIC_API(void)
java_lang_StringBuffer_setLength(JRIEnv* env, struct java_lang_StringBuffer* self, jint a);

/*** public charAt (I)C ***/
extern JRI_PUBLIC_API(jchar)
java_lang_StringBuffer_charAt(JRIEnv* env, struct java_lang_StringBuffer* self, jint a);

/*** public getChars (II[CI)V ***/
extern JRI_PUBLIC_API(void)
java_lang_StringBuffer_getChars(JRIEnv* env, struct java_lang_StringBuffer* self, jint a, jint b, jcharArray c, jint d);

/*** public setCharAt (IC)V ***/
extern JRI_PUBLIC_API(void)
java_lang_StringBuffer_setCharAt(JRIEnv* env, struct java_lang_StringBuffer* self, jint a, jchar b);

/*** public append (Ljava/lang/Object;)Ljava/lang/StringBuffer; ***/
extern JRI_PUBLIC_API(struct java_lang_StringBuffer *)
java_lang_StringBuffer_append(JRIEnv* env, struct java_lang_StringBuffer* self, struct java_lang_Object *a);

/*** public append (Ljava/lang/String;)Ljava/lang/StringBuffer; ***/
extern JRI_PUBLIC_API(struct java_lang_StringBuffer *)
java_lang_StringBuffer_append_1(JRIEnv* env, struct java_lang_StringBuffer* self, struct java_lang_String *a);

/*** public append ([C)Ljava/lang/StringBuffer; ***/
extern JRI_PUBLIC_API(struct java_lang_StringBuffer *)
java_lang_StringBuffer_append_2(JRIEnv* env, struct java_lang_StringBuffer* self, jcharArray a);

/*** public append ([CII)Ljava/lang/StringBuffer; ***/
extern JRI_PUBLIC_API(struct java_lang_StringBuffer *)
java_lang_StringBuffer_append_3(JRIEnv* env, struct java_lang_StringBuffer* self, jcharArray a, jint b, jint c);

/*** public append (Z)Ljava/lang/StringBuffer; ***/
extern JRI_PUBLIC_API(struct java_lang_StringBuffer *)
java_lang_StringBuffer_append_4(JRIEnv* env, struct java_lang_StringBuffer* self, jbool a);

/*** public append (C)Ljava/lang/StringBuffer; ***/
extern JRI_PUBLIC_API(struct java_lang_StringBuffer *)
java_lang_StringBuffer_append_5(JRIEnv* env, struct java_lang_StringBuffer* self, jchar a);

/*** public append (I)Ljava/lang/StringBuffer; ***/
extern JRI_PUBLIC_API(struct java_lang_StringBuffer *)
java_lang_StringBuffer_append_6(JRIEnv* env, struct java_lang_StringBuffer* self, jint a);

/*** public append (J)Ljava/lang/StringBuffer; ***/
extern JRI_PUBLIC_API(struct java_lang_StringBuffer *)
java_lang_StringBuffer_append_7(JRIEnv* env, struct java_lang_StringBuffer* self, jlong a);

/*** public append (F)Ljava/lang/StringBuffer; ***/
extern JRI_PUBLIC_API(struct java_lang_StringBuffer *)
java_lang_StringBuffer_append_8(JRIEnv* env, struct java_lang_StringBuffer* self, jfloat a);

/*** public append (D)Ljava/lang/StringBuffer; ***/
extern JRI_PUBLIC_API(struct java_lang_StringBuffer *)
java_lang_StringBuffer_append_9(JRIEnv* env, struct java_lang_StringBuffer* self, jdouble a);

/*** public insert (ILjava/lang/Object;)Ljava/lang/StringBuffer; ***/
extern JRI_PUBLIC_API(struct java_lang_StringBuffer *)
java_lang_StringBuffer_insert(JRIEnv* env, struct java_lang_StringBuffer* self, jint a, struct java_lang_Object *b);

/*** public insert (ILjava/lang/String;)Ljava/lang/StringBuffer; ***/
extern JRI_PUBLIC_API(struct java_lang_StringBuffer *)
java_lang_StringBuffer_insert_1(JRIEnv* env, struct java_lang_StringBuffer* self, jint a, struct java_lang_String *b);

/*** public insert (I[C)Ljava/lang/StringBuffer; ***/
extern JRI_PUBLIC_API(struct java_lang_StringBuffer *)
java_lang_StringBuffer_insert_2(JRIEnv* env, struct java_lang_StringBuffer* self, jint a, jcharArray b);

/*** public insert (IZ)Ljava/lang/StringBuffer; ***/
extern JRI_PUBLIC_API(struct java_lang_StringBuffer *)
java_lang_StringBuffer_insert_3(JRIEnv* env, struct java_lang_StringBuffer* self, jint a, jbool b);

/*** public insert (IC)Ljava/lang/StringBuffer; ***/
extern JRI_PUBLIC_API(struct java_lang_StringBuffer *)
java_lang_StringBuffer_insert_4(JRIEnv* env, struct java_lang_StringBuffer* self, jint a, jchar b);

/*** public insert (II)Ljava/lang/StringBuffer; ***/
extern JRI_PUBLIC_API(struct java_lang_StringBuffer *)
java_lang_StringBuffer_insert_5(JRIEnv* env, struct java_lang_StringBuffer* self, jint a, jint b);

/*** public insert (IJ)Ljava/lang/StringBuffer; ***/
extern JRI_PUBLIC_API(struct java_lang_StringBuffer *)
java_lang_StringBuffer_insert_6(JRIEnv* env, struct java_lang_StringBuffer* self, jint a, jlong b);

/*** public insert (IF)Ljava/lang/StringBuffer; ***/
extern JRI_PUBLIC_API(struct java_lang_StringBuffer *)
java_lang_StringBuffer_insert_7(JRIEnv* env, struct java_lang_StringBuffer* self, jint a, jfloat b);

/*** public insert (ID)Ljava/lang/StringBuffer; ***/
extern JRI_PUBLIC_API(struct java_lang_StringBuffer *)
java_lang_StringBuffer_insert_8(JRIEnv* env, struct java_lang_StringBuffer* self, jint a, jdouble b);

/*** public reverse ()Ljava/lang/StringBuffer; ***/
extern JRI_PUBLIC_API(struct java_lang_StringBuffer *)
java_lang_StringBuffer_reverse(JRIEnv* env, struct java_lang_StringBuffer* self);

/*** public toString ()Ljava/lang/String; ***/
extern JRI_PUBLIC_API(struct java_lang_String *)
java_lang_StringBuffer_toString(JRIEnv* env, struct java_lang_StringBuffer* self);

#else /* !DEBUG */

/*** public <init> ()V ***/
#define java_lang_StringBuffer_new(env, clazz)	\
	((struct java_lang_StringBuffer*)JRI_NewObject(env)(env, JRI_NewObject_op, clazz, methodID_java_lang_StringBuffer_new))

/*** public <init> (I)V ***/
#define java_lang_StringBuffer_new_1(env, clazz, a)	\
	((struct java_lang_StringBuffer*)JRI_NewObject(env)(env, JRI_NewObject_op, clazz, methodID_java_lang_StringBuffer_new_1, a))

/*** public <init> (Ljava/lang/String;)V ***/
#define java_lang_StringBuffer_new_2(env, clazz, a)	\
	((struct java_lang_StringBuffer*)JRI_NewObject(env)(env, JRI_NewObject_op, clazz, methodID_java_lang_StringBuffer_new_2, a))

/*** public length ()I ***/
#define java_lang_StringBuffer_length(env, obj) \
	((jint)JRI_CallMethodInt(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_length))

/*** public capacity ()I ***/
#define java_lang_StringBuffer_capacity(env, obj) \
	((jint)JRI_CallMethodInt(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_capacity))

/*** public ensureCapacity (I)V ***/
#define java_lang_StringBuffer_ensureCapacity(env, obj, a) \
	((void)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_ensureCapacity, a))

/*** public setLength (I)V ***/
#define java_lang_StringBuffer_setLength(env, obj, a) \
	((void)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_setLength, a))

/*** public charAt (I)C ***/
#define java_lang_StringBuffer_charAt(env, obj, a) \
	((jchar)JRI_CallMethodChar(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_charAt, a))

/*** public getChars (II[CI)V ***/
#define java_lang_StringBuffer_getChars(env, obj, a, b, c, d) \
	((void)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_getChars, a, b, c, d))

/*** public setCharAt (IC)V ***/
#define java_lang_StringBuffer_setCharAt(env, obj, a, b) \
	((void)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_setCharAt, a, b))

/*** public append (Ljava/lang/Object;)Ljava/lang/StringBuffer; ***/
#define java_lang_StringBuffer_append(env, obj, a) \
	((struct java_lang_StringBuffer *)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_append, a))

/*** public append (Ljava/lang/String;)Ljava/lang/StringBuffer; ***/
#define java_lang_StringBuffer_append_1(env, obj, a) \
	((struct java_lang_StringBuffer *)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_append_1, a))

/*** public append ([C)Ljava/lang/StringBuffer; ***/
#define java_lang_StringBuffer_append_2(env, obj, a) \
	((struct java_lang_StringBuffer *)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_append_2, a))

/*** public append ([CII)Ljava/lang/StringBuffer; ***/
#define java_lang_StringBuffer_append_3(env, obj, a, b, c) \
	((struct java_lang_StringBuffer *)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_append_3, a, b, c))

/*** public append (Z)Ljava/lang/StringBuffer; ***/
#define java_lang_StringBuffer_append_4(env, obj, a) \
	((struct java_lang_StringBuffer *)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_append_4, a))

/*** public append (C)Ljava/lang/StringBuffer; ***/
#define java_lang_StringBuffer_append_5(env, obj, a) \
	((struct java_lang_StringBuffer *)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_append_5, a))

/*** public append (I)Ljava/lang/StringBuffer; ***/
#define java_lang_StringBuffer_append_6(env, obj, a) \
	((struct java_lang_StringBuffer *)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_append_6, a))

/*** public append (J)Ljava/lang/StringBuffer; ***/
#define java_lang_StringBuffer_append_7(env, obj, a) \
	((struct java_lang_StringBuffer *)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_append_7, a))

/*** public append (F)Ljava/lang/StringBuffer; ***/
#define java_lang_StringBuffer_append_8(env, obj, a) \
	((struct java_lang_StringBuffer *)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_append_8, a))

/*** public append (D)Ljava/lang/StringBuffer; ***/
#define java_lang_StringBuffer_append_9(env, obj, a) \
	((struct java_lang_StringBuffer *)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_append_9, a))

/*** public insert (ILjava/lang/Object;)Ljava/lang/StringBuffer; ***/
#define java_lang_StringBuffer_insert(env, obj, a, b) \
	((struct java_lang_StringBuffer *)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_insert, a, b))

/*** public insert (ILjava/lang/String;)Ljava/lang/StringBuffer; ***/
#define java_lang_StringBuffer_insert_1(env, obj, a, b) \
	((struct java_lang_StringBuffer *)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_insert_1, a, b))

/*** public insert (I[C)Ljava/lang/StringBuffer; ***/
#define java_lang_StringBuffer_insert_2(env, obj, a, b) \
	((struct java_lang_StringBuffer *)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_insert_2, a, b))

/*** public insert (IZ)Ljava/lang/StringBuffer; ***/
#define java_lang_StringBuffer_insert_3(env, obj, a, b) \
	((struct java_lang_StringBuffer *)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_insert_3, a, b))

/*** public insert (IC)Ljava/lang/StringBuffer; ***/
#define java_lang_StringBuffer_insert_4(env, obj, a, b) \
	((struct java_lang_StringBuffer *)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_insert_4, a, b))

/*** public insert (II)Ljava/lang/StringBuffer; ***/
#define java_lang_StringBuffer_insert_5(env, obj, a, b) \
	((struct java_lang_StringBuffer *)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_insert_5, a, b))

/*** public insert (IJ)Ljava/lang/StringBuffer; ***/
#define java_lang_StringBuffer_insert_6(env, obj, a, b) \
	((struct java_lang_StringBuffer *)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_insert_6, a, b))

/*** public insert (IF)Ljava/lang/StringBuffer; ***/
#define java_lang_StringBuffer_insert_7(env, obj, a, b) \
	((struct java_lang_StringBuffer *)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_insert_7, a, b))

/*** public insert (ID)Ljava/lang/StringBuffer; ***/
#define java_lang_StringBuffer_insert_8(env, obj, a, b) \
	((struct java_lang_StringBuffer *)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_insert_8, a, b))

/*** public reverse ()Ljava/lang/StringBuffer; ***/
#define java_lang_StringBuffer_reverse(env, obj) \
	((struct java_lang_StringBuffer *)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_reverse))

/*** public toString ()Ljava/lang/String; ***/
#define java_lang_StringBuffer_toString(env, obj) \
	((struct java_lang_String *)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_toString))

#endif /* !DEBUG*/

/*** public <init> ()V ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_new;
#define name_java_lang_StringBuffer_new	"<init>"
#define sig_java_lang_StringBuffer_new 	"()V"
#define use_java_lang_StringBuffer_new(env, clazz)	\
	(methodID_java_lang_StringBuffer_new =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_new,	\
			sig_java_lang_StringBuffer_new))
#define unuse_java_lang_StringBuffer_new(env, clazz)	\
	(methodID_java_lang_StringBuffer_new = JRIUninitialized)

/*** public <init> (I)V ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_new_1;
#define name_java_lang_StringBuffer_new_1	"<init>"
#define sig_java_lang_StringBuffer_new_1 	"(I)V"
#define use_java_lang_StringBuffer_new_1(env, clazz)	\
	(methodID_java_lang_StringBuffer_new_1 =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_new_1,	\
			sig_java_lang_StringBuffer_new_1))
#define unuse_java_lang_StringBuffer_new_1(env, clazz)	\
	(methodID_java_lang_StringBuffer_new_1 = JRIUninitialized)

/*** public <init> (Ljava/lang/String;)V ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_new_2;
#define name_java_lang_StringBuffer_new_2	"<init>"
#define sig_java_lang_StringBuffer_new_2 	"(Ljava/lang/String;)V"
#define use_java_lang_StringBuffer_new_2(env, clazz)	\
	(methodID_java_lang_StringBuffer_new_2 =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_new_2,	\
			sig_java_lang_StringBuffer_new_2))
#define unuse_java_lang_StringBuffer_new_2(env, clazz)	\
	(methodID_java_lang_StringBuffer_new_2 = JRIUninitialized)

/*** public length ()I ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_length;
#define name_java_lang_StringBuffer_length	"length"
#define sig_java_lang_StringBuffer_length 	"()I"
#define use_java_lang_StringBuffer_length(env, clazz)	\
	(methodID_java_lang_StringBuffer_length =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_length,	\
			sig_java_lang_StringBuffer_length))
#define unuse_java_lang_StringBuffer_length(env, clazz)	\
	(methodID_java_lang_StringBuffer_length = JRIUninitialized)

/*** public capacity ()I ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_capacity;
#define name_java_lang_StringBuffer_capacity	"capacity"
#define sig_java_lang_StringBuffer_capacity 	"()I"
#define use_java_lang_StringBuffer_capacity(env, clazz)	\
	(methodID_java_lang_StringBuffer_capacity =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_capacity,	\
			sig_java_lang_StringBuffer_capacity))
#define unuse_java_lang_StringBuffer_capacity(env, clazz)	\
	(methodID_java_lang_StringBuffer_capacity = JRIUninitialized)

/*** public ensureCapacity (I)V ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_ensureCapacity;
#define name_java_lang_StringBuffer_ensureCapacity	"ensureCapacity"
#define sig_java_lang_StringBuffer_ensureCapacity 	"(I)V"
#define use_java_lang_StringBuffer_ensureCapacity(env, clazz)	\
	(methodID_java_lang_StringBuffer_ensureCapacity =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_ensureCapacity,	\
			sig_java_lang_StringBuffer_ensureCapacity))
#define unuse_java_lang_StringBuffer_ensureCapacity(env, clazz)	\
	(methodID_java_lang_StringBuffer_ensureCapacity = JRIUninitialized)

/*** public setLength (I)V ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_setLength;
#define name_java_lang_StringBuffer_setLength	"setLength"
#define sig_java_lang_StringBuffer_setLength 	"(I)V"
#define use_java_lang_StringBuffer_setLength(env, clazz)	\
	(methodID_java_lang_StringBuffer_setLength =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_setLength,	\
			sig_java_lang_StringBuffer_setLength))
#define unuse_java_lang_StringBuffer_setLength(env, clazz)	\
	(methodID_java_lang_StringBuffer_setLength = JRIUninitialized)

/*** public charAt (I)C ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_charAt;
#define name_java_lang_StringBuffer_charAt	"charAt"
#define sig_java_lang_StringBuffer_charAt 	"(I)C"
#define use_java_lang_StringBuffer_charAt(env, clazz)	\
	(methodID_java_lang_StringBuffer_charAt =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_charAt,	\
			sig_java_lang_StringBuffer_charAt))
#define unuse_java_lang_StringBuffer_charAt(env, clazz)	\
	(methodID_java_lang_StringBuffer_charAt = JRIUninitialized)

/*** public getChars (II[CI)V ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_getChars;
#define name_java_lang_StringBuffer_getChars	"getChars"
#define sig_java_lang_StringBuffer_getChars 	"(II[CI)V"
#define use_java_lang_StringBuffer_getChars(env, clazz)	\
	(methodID_java_lang_StringBuffer_getChars =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_getChars,	\
			sig_java_lang_StringBuffer_getChars))
#define unuse_java_lang_StringBuffer_getChars(env, clazz)	\
	(methodID_java_lang_StringBuffer_getChars = JRIUninitialized)

/*** public setCharAt (IC)V ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_setCharAt;
#define name_java_lang_StringBuffer_setCharAt	"setCharAt"
#define sig_java_lang_StringBuffer_setCharAt 	"(IC)V"
#define use_java_lang_StringBuffer_setCharAt(env, clazz)	\
	(methodID_java_lang_StringBuffer_setCharAt =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_setCharAt,	\
			sig_java_lang_StringBuffer_setCharAt))
#define unuse_java_lang_StringBuffer_setCharAt(env, clazz)	\
	(methodID_java_lang_StringBuffer_setCharAt = JRIUninitialized)

/*** public append (Ljava/lang/Object;)Ljava/lang/StringBuffer; ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_append;
#define name_java_lang_StringBuffer_append	"append"
#define sig_java_lang_StringBuffer_append 	"(Ljava/lang/Object;)Ljava/lang/StringBuffer;"
#define use_java_lang_StringBuffer_append(env, clazz)	\
	(methodID_java_lang_StringBuffer_append =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_append,	\
			sig_java_lang_StringBuffer_append))
#define unuse_java_lang_StringBuffer_append(env, clazz)	\
	(methodID_java_lang_StringBuffer_append = JRIUninitialized)

/*** public append (Ljava/lang/String;)Ljava/lang/StringBuffer; ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_append_1;
#define name_java_lang_StringBuffer_append_1	"append"
#define sig_java_lang_StringBuffer_append_1 	"(Ljava/lang/String;)Ljava/lang/StringBuffer;"
#define use_java_lang_StringBuffer_append_1(env, clazz)	\
	(methodID_java_lang_StringBuffer_append_1 =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_append_1,	\
			sig_java_lang_StringBuffer_append_1))
#define unuse_java_lang_StringBuffer_append_1(env, clazz)	\
	(methodID_java_lang_StringBuffer_append_1 = JRIUninitialized)

/*** public append ([C)Ljava/lang/StringBuffer; ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_append_2;
#define name_java_lang_StringBuffer_append_2	"append"
#define sig_java_lang_StringBuffer_append_2 	"([C)Ljava/lang/StringBuffer;"
#define use_java_lang_StringBuffer_append_2(env, clazz)	\
	(methodID_java_lang_StringBuffer_append_2 =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_append_2,	\
			sig_java_lang_StringBuffer_append_2))
#define unuse_java_lang_StringBuffer_append_2(env, clazz)	\
	(methodID_java_lang_StringBuffer_append_2 = JRIUninitialized)

/*** public append ([CII)Ljava/lang/StringBuffer; ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_append_3;
#define name_java_lang_StringBuffer_append_3	"append"
#define sig_java_lang_StringBuffer_append_3 	"([CII)Ljava/lang/StringBuffer;"
#define use_java_lang_StringBuffer_append_3(env, clazz)	\
	(methodID_java_lang_StringBuffer_append_3 =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_append_3,	\
			sig_java_lang_StringBuffer_append_3))
#define unuse_java_lang_StringBuffer_append_3(env, clazz)	\
	(methodID_java_lang_StringBuffer_append_3 = JRIUninitialized)

/*** public append (Z)Ljava/lang/StringBuffer; ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_append_4;
#define name_java_lang_StringBuffer_append_4	"append"
#define sig_java_lang_StringBuffer_append_4 	"(Z)Ljava/lang/StringBuffer;"
#define use_java_lang_StringBuffer_append_4(env, clazz)	\
	(methodID_java_lang_StringBuffer_append_4 =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_append_4,	\
			sig_java_lang_StringBuffer_append_4))
#define unuse_java_lang_StringBuffer_append_4(env, clazz)	\
	(methodID_java_lang_StringBuffer_append_4 = JRIUninitialized)

/*** public append (C)Ljava/lang/StringBuffer; ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_append_5;
#define name_java_lang_StringBuffer_append_5	"append"
#define sig_java_lang_StringBuffer_append_5 	"(C)Ljava/lang/StringBuffer;"
#define use_java_lang_StringBuffer_append_5(env, clazz)	\
	(methodID_java_lang_StringBuffer_append_5 =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_append_5,	\
			sig_java_lang_StringBuffer_append_5))
#define unuse_java_lang_StringBuffer_append_5(env, clazz)	\
	(methodID_java_lang_StringBuffer_append_5 = JRIUninitialized)

/*** public append (I)Ljava/lang/StringBuffer; ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_append_6;
#define name_java_lang_StringBuffer_append_6	"append"
#define sig_java_lang_StringBuffer_append_6 	"(I)Ljava/lang/StringBuffer;"
#define use_java_lang_StringBuffer_append_6(env, clazz)	\
	(methodID_java_lang_StringBuffer_append_6 =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_append_6,	\
			sig_java_lang_StringBuffer_append_6))
#define unuse_java_lang_StringBuffer_append_6(env, clazz)	\
	(methodID_java_lang_StringBuffer_append_6 = JRIUninitialized)

/*** public append (J)Ljava/lang/StringBuffer; ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_append_7;
#define name_java_lang_StringBuffer_append_7	"append"
#define sig_java_lang_StringBuffer_append_7 	"(J)Ljava/lang/StringBuffer;"
#define use_java_lang_StringBuffer_append_7(env, clazz)	\
	(methodID_java_lang_StringBuffer_append_7 =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_append_7,	\
			sig_java_lang_StringBuffer_append_7))
#define unuse_java_lang_StringBuffer_append_7(env, clazz)	\
	(methodID_java_lang_StringBuffer_append_7 = JRIUninitialized)

/*** public append (F)Ljava/lang/StringBuffer; ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_append_8;
#define name_java_lang_StringBuffer_append_8	"append"
#define sig_java_lang_StringBuffer_append_8 	"(F)Ljava/lang/StringBuffer;"
#define use_java_lang_StringBuffer_append_8(env, clazz)	\
	(methodID_java_lang_StringBuffer_append_8 =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_append_8,	\
			sig_java_lang_StringBuffer_append_8))
#define unuse_java_lang_StringBuffer_append_8(env, clazz)	\
	(methodID_java_lang_StringBuffer_append_8 = JRIUninitialized)

/*** public append (D)Ljava/lang/StringBuffer; ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_append_9;
#define name_java_lang_StringBuffer_append_9	"append"
#define sig_java_lang_StringBuffer_append_9 	"(D)Ljava/lang/StringBuffer;"
#define use_java_lang_StringBuffer_append_9(env, clazz)	\
	(methodID_java_lang_StringBuffer_append_9 =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_append_9,	\
			sig_java_lang_StringBuffer_append_9))
#define unuse_java_lang_StringBuffer_append_9(env, clazz)	\
	(methodID_java_lang_StringBuffer_append_9 = JRIUninitialized)

/*** public insert (ILjava/lang/Object;)Ljava/lang/StringBuffer; ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_insert;
#define name_java_lang_StringBuffer_insert	"insert"
#define sig_java_lang_StringBuffer_insert 	"(ILjava/lang/Object;)Ljava/lang/StringBuffer;"
#define use_java_lang_StringBuffer_insert(env, clazz)	\
	(methodID_java_lang_StringBuffer_insert =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_insert,	\
			sig_java_lang_StringBuffer_insert))
#define unuse_java_lang_StringBuffer_insert(env, clazz)	\
	(methodID_java_lang_StringBuffer_insert = JRIUninitialized)

/*** public insert (ILjava/lang/String;)Ljava/lang/StringBuffer; ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_insert_1;
#define name_java_lang_StringBuffer_insert_1	"insert"
#define sig_java_lang_StringBuffer_insert_1 	"(ILjava/lang/String;)Ljava/lang/StringBuffer;"
#define use_java_lang_StringBuffer_insert_1(env, clazz)	\
	(methodID_java_lang_StringBuffer_insert_1 =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_insert_1,	\
			sig_java_lang_StringBuffer_insert_1))
#define unuse_java_lang_StringBuffer_insert_1(env, clazz)	\
	(methodID_java_lang_StringBuffer_insert_1 = JRIUninitialized)

/*** public insert (I[C)Ljava/lang/StringBuffer; ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_insert_2;
#define name_java_lang_StringBuffer_insert_2	"insert"
#define sig_java_lang_StringBuffer_insert_2 	"(I[C)Ljava/lang/StringBuffer;"
#define use_java_lang_StringBuffer_insert_2(env, clazz)	\
	(methodID_java_lang_StringBuffer_insert_2 =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_insert_2,	\
			sig_java_lang_StringBuffer_insert_2))
#define unuse_java_lang_StringBuffer_insert_2(env, clazz)	\
	(methodID_java_lang_StringBuffer_insert_2 = JRIUninitialized)

/*** public insert (IZ)Ljava/lang/StringBuffer; ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_insert_3;
#define name_java_lang_StringBuffer_insert_3	"insert"
#define sig_java_lang_StringBuffer_insert_3 	"(IZ)Ljava/lang/StringBuffer;"
#define use_java_lang_StringBuffer_insert_3(env, clazz)	\
	(methodID_java_lang_StringBuffer_insert_3 =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_insert_3,	\
			sig_java_lang_StringBuffer_insert_3))
#define unuse_java_lang_StringBuffer_insert_3(env, clazz)	\
	(methodID_java_lang_StringBuffer_insert_3 = JRIUninitialized)

/*** public insert (IC)Ljava/lang/StringBuffer; ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_insert_4;
#define name_java_lang_StringBuffer_insert_4	"insert"
#define sig_java_lang_StringBuffer_insert_4 	"(IC)Ljava/lang/StringBuffer;"
#define use_java_lang_StringBuffer_insert_4(env, clazz)	\
	(methodID_java_lang_StringBuffer_insert_4 =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_insert_4,	\
			sig_java_lang_StringBuffer_insert_4))
#define unuse_java_lang_StringBuffer_insert_4(env, clazz)	\
	(methodID_java_lang_StringBuffer_insert_4 = JRIUninitialized)

/*** public insert (II)Ljava/lang/StringBuffer; ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_insert_5;
#define name_java_lang_StringBuffer_insert_5	"insert"
#define sig_java_lang_StringBuffer_insert_5 	"(II)Ljava/lang/StringBuffer;"
#define use_java_lang_StringBuffer_insert_5(env, clazz)	\
	(methodID_java_lang_StringBuffer_insert_5 =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_insert_5,	\
			sig_java_lang_StringBuffer_insert_5))
#define unuse_java_lang_StringBuffer_insert_5(env, clazz)	\
	(methodID_java_lang_StringBuffer_insert_5 = JRIUninitialized)

/*** public insert (IJ)Ljava/lang/StringBuffer; ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_insert_6;
#define name_java_lang_StringBuffer_insert_6	"insert"
#define sig_java_lang_StringBuffer_insert_6 	"(IJ)Ljava/lang/StringBuffer;"
#define use_java_lang_StringBuffer_insert_6(env, clazz)	\
	(methodID_java_lang_StringBuffer_insert_6 =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_insert_6,	\
			sig_java_lang_StringBuffer_insert_6))
#define unuse_java_lang_StringBuffer_insert_6(env, clazz)	\
	(methodID_java_lang_StringBuffer_insert_6 = JRIUninitialized)

/*** public insert (IF)Ljava/lang/StringBuffer; ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_insert_7;
#define name_java_lang_StringBuffer_insert_7	"insert"
#define sig_java_lang_StringBuffer_insert_7 	"(IF)Ljava/lang/StringBuffer;"
#define use_java_lang_StringBuffer_insert_7(env, clazz)	\
	(methodID_java_lang_StringBuffer_insert_7 =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_insert_7,	\
			sig_java_lang_StringBuffer_insert_7))
#define unuse_java_lang_StringBuffer_insert_7(env, clazz)	\
	(methodID_java_lang_StringBuffer_insert_7 = JRIUninitialized)

/*** public insert (ID)Ljava/lang/StringBuffer; ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_insert_8;
#define name_java_lang_StringBuffer_insert_8	"insert"
#define sig_java_lang_StringBuffer_insert_8 	"(ID)Ljava/lang/StringBuffer;"
#define use_java_lang_StringBuffer_insert_8(env, clazz)	\
	(methodID_java_lang_StringBuffer_insert_8 =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_insert_8,	\
			sig_java_lang_StringBuffer_insert_8))
#define unuse_java_lang_StringBuffer_insert_8(env, clazz)	\
	(methodID_java_lang_StringBuffer_insert_8 = JRIUninitialized)

/*** public reverse ()Ljava/lang/StringBuffer; ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_reverse;
#define name_java_lang_StringBuffer_reverse	"reverse"
#define sig_java_lang_StringBuffer_reverse 	"()Ljava/lang/StringBuffer;"
#define use_java_lang_StringBuffer_reverse(env, clazz)	\
	(methodID_java_lang_StringBuffer_reverse =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_reverse,	\
			sig_java_lang_StringBuffer_reverse))
#define unuse_java_lang_StringBuffer_reverse(env, clazz)	\
	(methodID_java_lang_StringBuffer_reverse = JRIUninitialized)

/*** public toString ()Ljava/lang/String; ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_toString;
#define name_java_lang_StringBuffer_toString	"toString"
#define sig_java_lang_StringBuffer_toString 	"()Ljava/lang/String;"
#define use_java_lang_StringBuffer_toString(env, clazz)	\
	(methodID_java_lang_StringBuffer_toString =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_toString,	\
			sig_java_lang_StringBuffer_toString))
#define unuse_java_lang_StringBuffer_toString(env, clazz)	\
	(methodID_java_lang_StringBuffer_toString = JRIUninitialized)

/*******************************************************************************
 * IMPLEMENTATION SECTION: 
 * Define the IMPLEMENT_java_lang_StringBuffer symbol 
 * if you intend to implement the native methods of this class. This 
 * symbol makes the private and protected methods available. You should 
 * also call the register_java_lang_StringBuffer routine 
 * to make your native methods available.
 ******************************************************************************/

extern JRI_PUBLIC_API(struct java_lang_Class*)
use_java_lang_StringBuffer(JRIEnv* env);

extern JRI_PUBLIC_API(void)
unuse_java_lang_StringBuffer(JRIEnv* env);

extern JRI_PUBLIC_API(struct java_lang_Class*)
register_java_lang_StringBuffer(JRIEnv* env);

extern JRI_PUBLIC_API(void)
unregister_java_lang_StringBuffer(JRIEnv* env);

#ifdef IMPLEMENT_java_lang_StringBuffer

/*******************************************************************************
 * Implementation Field Accessors: 
 * You should only use these from within the native method definitions.
 ******************************************************************************/

#ifdef DEBUG

/*** private value [C ***/
extern JRI_PUBLIC_API(jref)
get_java_lang_StringBuffer_value(JRIEnv* env, java_lang_StringBuffer* obj);
extern JRI_PUBLIC_API(void)
set_java_lang_StringBuffer_value(JRIEnv* env, java_lang_StringBuffer* obj, jref v);

/*** private count I ***/
extern JRI_PUBLIC_API(jint)
get_java_lang_StringBuffer_count(JRIEnv* env, java_lang_StringBuffer* obj);
extern JRI_PUBLIC_API(void)
set_java_lang_StringBuffer_count(JRIEnv* env, java_lang_StringBuffer* obj, jint v);

/*** private shared Z ***/
extern JRI_PUBLIC_API(jbool)
get_java_lang_StringBuffer_shared(JRIEnv* env, java_lang_StringBuffer* obj);
extern JRI_PUBLIC_API(void)
set_java_lang_StringBuffer_shared(JRIEnv* env, java_lang_StringBuffer* obj, jbool v);

#else /* !DEBUG */

/*** private value [C ***/
#define get_java_lang_StringBuffer_value(env, obj) \
	((jref)JRI_GetField(env, obj, fieldID_java_lang_StringBuffer_value))
#define set_java_lang_StringBuffer_value(env, obj, v) \
	JRI_SetField(env, obj, fieldID_java_lang_StringBuffer_value, v)

/*** private count I ***/
#define get_java_lang_StringBuffer_count(env, obj) \
	(JRI_GetFieldInt(env, obj, fieldID_java_lang_StringBuffer_count))
#define set_java_lang_StringBuffer_count(env, obj, v) \
	JRI_SetFieldInt(env, obj, fieldID_java_lang_StringBuffer_count, v)

/*** private shared Z ***/
#define get_java_lang_StringBuffer_shared(env, obj) \
	(JRI_GetFieldBoolean(env, obj, fieldID_java_lang_StringBuffer_shared))
#define set_java_lang_StringBuffer_shared(env, obj, v) \
	JRI_SetFieldBoolean(env, obj, fieldID_java_lang_StringBuffer_shared, v)

#endif /* !DEBUG*/

extern JRIFieldID FAR fieldID_java_lang_StringBuffer_value;
#define name_java_lang_StringBuffer_value	"value"
#define sig_java_lang_StringBuffer_value 	"[C"
#define use_java_lang_StringBuffer_value(env, clazz)	\
	(fieldID_java_lang_StringBuffer_value =	\
		JRI_GetFieldID(env, clazz,	\
			name_java_lang_StringBuffer_value,	\
			sig_java_lang_StringBuffer_value))
#define unuse_java_lang_StringBuffer_value(env, clazz)	\
		(fieldID_java_lang_StringBuffer_value = JRIUninitialized)

extern JRIFieldID FAR fieldID_java_lang_StringBuffer_count;
#define name_java_lang_StringBuffer_count	"count"
#define sig_java_lang_StringBuffer_count 	"I"
#define use_java_lang_StringBuffer_count(env, clazz)	\
	(fieldID_java_lang_StringBuffer_count =	\
		JRI_GetFieldID(env, clazz,	\
			name_java_lang_StringBuffer_count,	\
			sig_java_lang_StringBuffer_count))
#define unuse_java_lang_StringBuffer_count(env, clazz)	\
		(fieldID_java_lang_StringBuffer_count = JRIUninitialized)

extern JRIFieldID FAR fieldID_java_lang_StringBuffer_shared;
#define name_java_lang_StringBuffer_shared	"shared"
#define sig_java_lang_StringBuffer_shared 	"Z"
#define use_java_lang_StringBuffer_shared(env, clazz)	\
	(fieldID_java_lang_StringBuffer_shared =	\
		JRI_GetFieldID(env, clazz,	\
			name_java_lang_StringBuffer_shared,	\
			sig_java_lang_StringBuffer_shared))
#define unuse_java_lang_StringBuffer_shared(env, clazz)	\
		(fieldID_java_lang_StringBuffer_shared = JRIUninitialized)

/*******************************************************************************
 * Implementation Methods: 
 * You should only use these from within the native method definitions.
 ******************************************************************************/

#ifdef DEBUG

/*** private final copyWhenShared ()V ***/
extern JRI_PUBLIC_API(void)
java_lang_StringBuffer_copyWhenShared(JRIEnv* env, struct java_lang_StringBuffer* self);

/*** final setShared ()V ***/
extern JRI_PUBLIC_API(void)
java_lang_StringBuffer_setShared(JRIEnv* env, struct java_lang_StringBuffer* self);

/*** final getValue ()[C ***/
extern JRI_PUBLIC_API(jref)
java_lang_StringBuffer_getValue(JRIEnv* env, struct java_lang_StringBuffer* self);

#else /* !DEBUG */

/*** private final copyWhenShared ()V ***/
#define java_lang_StringBuffer_copyWhenShared(env, obj) \
	((void)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_copyWhenShared))

/*** final setShared ()V ***/
#define java_lang_StringBuffer_setShared(env, obj) \
	((void)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_setShared))

/*** final getValue ()[C ***/
#define java_lang_StringBuffer_getValue(env, obj) \
	((jref)JRI_CallMethod(env)(env, JRI_CallMethod_op, obj, methodID_java_lang_StringBuffer_getValue))

#endif /* !DEBUG*/

/*** private final copyWhenShared ()V ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_copyWhenShared;
#define name_java_lang_StringBuffer_copyWhenShared	"copyWhenShared"
#define sig_java_lang_StringBuffer_copyWhenShared 	"()V"
#define use_java_lang_StringBuffer_copyWhenShared(env, clazz)	\
	(methodID_java_lang_StringBuffer_copyWhenShared =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_copyWhenShared,	\
			sig_java_lang_StringBuffer_copyWhenShared))
#define unuse_java_lang_StringBuffer_copyWhenShared(env, clazz)	\
	(methodID_java_lang_StringBuffer_copyWhenShared = JRIUninitialized)

/*** final setShared ()V ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_setShared;
#define name_java_lang_StringBuffer_setShared	"setShared"
#define sig_java_lang_StringBuffer_setShared 	"()V"
#define use_java_lang_StringBuffer_setShared(env, clazz)	\
	(methodID_java_lang_StringBuffer_setShared =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_setShared,	\
			sig_java_lang_StringBuffer_setShared))
#define unuse_java_lang_StringBuffer_setShared(env, clazz)	\
	(methodID_java_lang_StringBuffer_setShared = JRIUninitialized)

/*** final getValue ()[C ***/
extern JRIMethodID FAR methodID_java_lang_StringBuffer_getValue;
#define name_java_lang_StringBuffer_getValue	"getValue"
#define sig_java_lang_StringBuffer_getValue 	"()[C"
#define use_java_lang_StringBuffer_getValue(env, clazz)	\
	(methodID_java_lang_StringBuffer_getValue =	\
		JRI_GetMethodID(env, clazz,	\
			name_java_lang_StringBuffer_getValue,	\
			sig_java_lang_StringBuffer_getValue))
#define unuse_java_lang_StringBuffer_getValue(env, clazz)	\
	(methodID_java_lang_StringBuffer_getValue = JRIUninitialized)

#endif /* IMPLEMENT_java_lang_StringBuffer */

#ifdef __cplusplus
} /* extern "C" */

/*******************************************************************************
 * C++ Definitions
 ******************************************************************************/

#include "java_lang_Object.h"

struct java_lang_StringBuffer : virtual public java_lang_Object {

	static struct java_lang_Class* _use(JRIEnv* env) {
		return use_java_lang_StringBuffer(env);
	}

	static void _unuse(JRIEnv* env) {
		unuse_java_lang_StringBuffer(env);
	}

	static struct java_lang_Class* _register(JRIEnv* env) {
		return register_java_lang_StringBuffer(env);
	}

	static void _unregister(JRIEnv* env) {
		unregister_java_lang_StringBuffer(env);
	}

	static struct java_lang_Class* _class(JRIEnv* env) {
		return class_java_lang_StringBuffer(env);
	}

	/* Public Methods */
	/*** public <init> ()V ***/
	static java_lang_StringBuffer* _new(JRIEnv* env, struct java_lang_Class* clazz) {
		return java_lang_StringBuffer_new(env, clazz);
	}

	/*** public <init> (I)V ***/
	static java_lang_StringBuffer* _new(JRIEnv* env, struct java_lang_Class* clazz, jint a) {
		return java_lang_StringBuffer_new_1(env, clazz, a);
	}

	/*** public <init> (Ljava/lang/String;)V ***/
	static java_lang_StringBuffer* _new(JRIEnv* env, struct java_lang_Class* clazz, struct java_lang_String *a) {
		return java_lang_StringBuffer_new_2(env, clazz, a);
	}

	/*** public length ()I ***/
	jint length(JRIEnv* env) {
		return java_lang_StringBuffer_length(env, this);
	}

	/*** public capacity ()I ***/
	jint capacity(JRIEnv* env) {
		return java_lang_StringBuffer_capacity(env, this);
	}

	/*** public ensureCapacity (I)V ***/
	void ensureCapacity(JRIEnv* env, jint a) {
		java_lang_StringBuffer_ensureCapacity(env, this, a);
	}

	/*** public setLength (I)V ***/
	void setLength(JRIEnv* env, jint a) {
		java_lang_StringBuffer_setLength(env, this, a);
	}

	/*** public charAt (I)C ***/
	jchar charAt(JRIEnv* env, jint a) {
		return java_lang_StringBuffer_charAt(env, this, a);
	}

	/*** public getChars (II[CI)V ***/
	void getChars(JRIEnv* env, jint a, jint b, jcharArray c, jint d) {
		java_lang_StringBuffer_getChars(env, this, a, b, c, d);
	}

	/*** public setCharAt (IC)V ***/
	void setCharAt(JRIEnv* env, jint a, jchar b) {
		java_lang_StringBuffer_setCharAt(env, this, a, b);
	}

	/*** public append (Ljava/lang/Object;)Ljava/lang/StringBuffer; ***/
	struct java_lang_StringBuffer * append(JRIEnv* env, struct java_lang_Object *a) {
		return java_lang_StringBuffer_append(env, this, a);
	}

	/*** public append (Ljava/lang/String;)Ljava/lang/StringBuffer; ***/
	struct java_lang_StringBuffer * append(JRIEnv* env, struct java_lang_String *a) {
		return java_lang_StringBuffer_append_1(env, this, a);
	}

	/*** public append ([C)Ljava/lang/StringBuffer; ***/
	struct java_lang_StringBuffer * append(JRIEnv* env, jcharArray a) {
		return java_lang_StringBuffer_append_2(env, this, a);
	}

	/*** public append ([CII)Ljava/lang/StringBuffer; ***/
	struct java_lang_StringBuffer * append(JRIEnv* env, jcharArray a, jint b, jint c) {
		return java_lang_StringBuffer_append_3(env, this, a, b, c);
	}

	/*** public append (Z)Ljava/lang/StringBuffer; ***/
	struct java_lang_StringBuffer * append(JRIEnv* env, jbool a) {
		return java_lang_StringBuffer_append_4(env, this, a);
	}

	/*** public append (C)Ljava/lang/StringBuffer; ***/
	struct java_lang_StringBuffer * append(JRIEnv* env, jchar a) {
		return java_lang_StringBuffer_append_5(env, this, a);
	}

	/*** public append (I)Ljava/lang/StringBuffer; ***/
	struct java_lang_StringBuffer * append(JRIEnv* env, jint a) {
		return java_lang_StringBuffer_append_6(env, this, a);
	}

	/*** public append (J)Ljava/lang/StringBuffer; ***/
	struct java_lang_StringBuffer * append(JRIEnv* env, jlong a) {
		return java_lang_StringBuffer_append_7(env, this, a);
	}

	/*** public append (F)Ljava/lang/StringBuffer; ***/
	struct java_lang_StringBuffer * append(JRIEnv* env, jfloat a) {
		return java_lang_StringBuffer_append_8(env, this, a);
	}

	/*** public append (D)Ljava/lang/StringBuffer; ***/
	struct java_lang_StringBuffer * append(JRIEnv* env, jdouble a) {
		return java_lang_StringBuffer_append_9(env, this, a);
	}

	/*** public insert (ILjava/lang/Object;)Ljava/lang/StringBuffer; ***/
	struct java_lang_StringBuffer * insert(JRIEnv* env, jint a, struct java_lang_Object *b) {
		return java_lang_StringBuffer_insert(env, this, a, b);
	}

	/*** public insert (ILjava/lang/String;)Ljava/lang/StringBuffer; ***/
	struct java_lang_StringBuffer * insert(JRIEnv* env, jint a, struct java_lang_String *b) {
		return java_lang_StringBuffer_insert_1(env, this, a, b);
	}

	/*** public insert (I[C)Ljava/lang/StringBuffer; ***/
	struct java_lang_StringBuffer * insert(JRIEnv* env, jint a, jcharArray b) {
		return java_lang_StringBuffer_insert_2(env, this, a, b);
	}

	/*** public insert (IZ)Ljava/lang/StringBuffer; ***/
	struct java_lang_StringBuffer * insert(JRIEnv* env, jint a, jbool b) {
		return java_lang_StringBuffer_insert_3(env, this, a, b);
	}

	/*** public insert (IC)Ljava/lang/StringBuffer; ***/
	struct java_lang_StringBuffer * insert(JRIEnv* env, jint a, jchar b) {
		return java_lang_StringBuffer_insert_4(env, this, a, b);
	}

	/*** public insert (II)Ljava/lang/StringBuffer; ***/
	struct java_lang_StringBuffer * insert(JRIEnv* env, jint a, jint b) {
		return java_lang_StringBuffer_insert_5(env, this, a, b);
	}

	/*** public insert (IJ)Ljava/lang/StringBuffer; ***/
	struct java_lang_StringBuffer * insert(JRIEnv* env, jint a, jlong b) {
		return java_lang_StringBuffer_insert_6(env, this, a, b);
	}

	/*** public insert (IF)Ljava/lang/StringBuffer; ***/
	struct java_lang_StringBuffer * insert(JRIEnv* env, jint a, jfloat b) {
		return java_lang_StringBuffer_insert_7(env, this, a, b);
	}

	/*** public insert (ID)Ljava/lang/StringBuffer; ***/
	struct java_lang_StringBuffer * insert(JRIEnv* env, jint a, jdouble b) {
		return java_lang_StringBuffer_insert_8(env, this, a, b);
	}

	/*** public reverse ()Ljava/lang/StringBuffer; ***/
	struct java_lang_StringBuffer * reverse(JRIEnv* env) {
		return java_lang_StringBuffer_reverse(env, this);
	}

	/*** public toString ()Ljava/lang/String; ***/
	struct java_lang_String * toString(JRIEnv* env) {
		return java_lang_StringBuffer_toString(env, this);
	}

#ifdef IMPLEMENT_java_lang_StringBuffer

	/* Private Field Accessors */
	/*** private value [C ***/
	jref value(JRIEnv* env) {
		return get_java_lang_StringBuffer_value(env, this);
	}
	void value(JRIEnv* env, jref v) {
		set_java_lang_StringBuffer_value(env, this, v);
	}

	/*** private count I ***/
	jint count(JRIEnv* env) {
		return get_java_lang_StringBuffer_count(env, this);
	}
	void count(JRIEnv* env, jint v) {
		set_java_lang_StringBuffer_count(env, this, v);
	}

	/*** private shared Z ***/
	jbool shared(JRIEnv* env) {
		return get_java_lang_StringBuffer_shared(env, this);
	}
	void shared(JRIEnv* env, jbool v) {
		set_java_lang_StringBuffer_shared(env, this, v);
	}

	/* Private Methods */
	/*** private final copyWhenShared ()V ***/
	void copyWhenShared(JRIEnv* env) {
		java_lang_StringBuffer_copyWhenShared(env, this);
	}

#endif /* IMPLEMENT_java_lang_StringBuffer */
};

#endif /* __cplusplus */

#endif /* Class java/lang/StringBuffer */
