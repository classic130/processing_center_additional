
// ConfigChkr.cpp : Implementation of CConfigChkr

#include "stdafx.h"
#include "ConfigChk.h"
#include "ConfigChkr.h"
#include <winver.h>
#include "global.h"
#include <string.h>
#include <wincrypt.h>
#include <stdio.h>



/////////////////////////////////////////////////////////////////////////////
// CConfigChkr


BYTE bSigForVer1[] = {
			0x5e,0x50,0xac,0x2d,0xeb,0x1e,0x54,0x68,0xb0,0xbc,0xc7,0xec,0x86,
				0x40,0x8d,0x65,0xf7,0x2b,0x89,0x30,0x6a,0xb4,0xa7,0x8e,0x44,
				0xde,0x03,0x69,0x97,0x6e,0x84,0xee,0x40,0x21,0x96,0x46,0x26,
				0x5a,0x0d,0x81,0xe5,0x88,0xfa,0x77,0x09,0xc9,0x64,0x1f,0xdb,
				0xd5,0x98,0xd9,0xe9,0xed,0x92,0x08,0xe8,0x89,0x40,0x47,0x2c,
				0xab,0xa6,0x83,0x68,0xbc,0xf3,0xf0,0x4c,0xd7,0x07,0x52,0x1a,
				0x32,0x89,0x95,0x33,0x98,0x07,0x6b,0xd2,0x3f,0xcd,0xfa,0xdb,
				0xa1,0x0e,0xf6,0x19,0x99,0x64,0x01,0x1f,0xab,0x3c,0xed,0xbe,
				0x9e,0x36,0x92,0x74,0xec,0xf4,0xa1,0x78,0x42,0x43,0xd3,0x8b,
				0x62,0x79,0x6f,0xf4,0x1d,0x18,0x7b,0x1b,0x11,0x04,0x4f,0x50,
				0x2e,0xe0,0x1b,0xa7,0x54,0x25,0x64,0x00,0x00,0x00,0x00,0x00,
				0x00,0x00,0x00
		};

BYTE bSigForVer2[] = {
			0xc3,0xcd,0xf2,0x67,0x67,0x7f,0xc8,0x04,0x60,0xa6,0x67,0x81,0x27,
				0xb3,0x46,0xb4,0x1a,0xb0,0x1d,0x19,0x7e,0x2d,0x88,0x4c,0xeb,
				0x46,0x61,0xe4,0x61,0xdf,0x72,0xd9,0x7d,0xca,0xbc,0x5d,0xac,
				0xf1,0xac,0x2e,0xa7,0xcd,0x04,0xbb,0x08,0x89,0xfc,0x37,0x7b,
				0x9a,0x52,0x1f,0xd1,0x63,0xb1,0xe1,0xc7,0x60,0x36,0xdc,0xd8,
				0x1b,0x0e,0x49,0xf2,0x36,0xe9,0x8b,0xbc,0xfc,0x63,0x46,0xc5,
				0x1e,0xfa,0x5f,0xa1,0xc4,0xbc,0x08,0x66,0x97,0x44,0x1b,0x09,
				0x26,0x30,0x4c,0xb2,0xf1,0x59,0x15,0x06,0x08,0x47,0x82,0x7d,
				0x1d,0x27,0xdd,0x28,0xae,0x31,0x71,0x1b,0xcd,0xf4,0x6b,0x0a,
				0x5b,0x39,0x77,0x4a,0x86,0x98,0x2a,0xcf,0xe7,0x41,0x43,0x1a,
				0x03,0x80,0xd1,0xc5,0x12,0x0f,0x4e,0x00,0x00,0x00,0x00,0x00,
				0x00,0x00,0x00
		};

/****************************************/
/******  _decode       ******************/
/****************************************/
BOOL	_decode(short input, DWORD *output)
{
	return TRUE;
}


/*****************************************************************************/
// _WideToMultiString() : Converts a Wide Character String to Multi Byte String.
//
//  Input :
//	  szwcInputString : BSTR
//                Contains the Wide Character string
//  Output :
//	  NONE
//  Returns : LPSTR
//				  Returns the Multi Byte String representation of the
//				  input Wide Character String.
/*****************************************************************************/
LPSTR CConfigChkr::_WideToMultiString(BSTR szwcInputString)
{
	/* artf28855 */ 
	return NULL;
}

BSTR CConfigChkr::_MultiToWideString(LPSTR szInputString)
{
	/* artf28855 */ 
	return NULL;
}


STDMETHODIMP CConfigChkr::GetVersion(VARIANT *i_pvarFile, VARIANT *o_pvarVersion, long *o_lResult)
{
	/* artf28855 */ 
	*o_lResult = VS_OK;
	return S_OK;
}

STDMETHODIMP CConfigChkr::VerCompare(VARIANT *i_pvarVer1, VARIANT *i_pvarVer2, long *o_plResult)
{
	/* artf28855 */ 
	*o_plResult = VS_GREAT;
	return S_OK;
}

long CConfigChkr::_CompareVersion(LPSTR szVer1, LPSTR szVer2)
{
	/* artf28855 */ 
	return 0;
}

STDMETHODIMP CConfigChkr::CheckMSEnhCSP(long *o_lRetVal)
{
	/* artf28855 */ 
	*o_lRetVal = 1;
	return S_OK;
}



STDMETHODIMP CConfigChkr::FixEnhCSP(VARIANT *i_pvarEnhCSPVer, long *o_plRetVal)
{
	/* artf28855 */ 
	*o_plRetVal = 1;
	return S_OK;
}


LPSTR CConfigChkr::GetVer(LPSTR szFileName)
{
	/* artf28855 */ 
	return NULL;
}



// This function checks whether the specified fileName 
// exists in a predefined list of files that are 
// approved by VeriSign, whose version numbers can be 
// checked without being a security threat


BOOL CConfigChkr::CheckFileName(LPSTR pFileName)
{
	/* artf28855 */ 
	return TRUE;
}

STDMETHODIMP CConfigChkr::ChkWindowsLogin(long* o_lResult)
{
	/* artf28855 */ 
	*o_lResult = 0;
	return S_OK;
}

STDMETHODIMP CConfigChkr::CheckKeyGen(VARIANT *i_pvarProvName, VARIANT *i_pvarKeyFlags, VARIANT *o_pvarResult)
{
	/* artf28855 */ 
	o_pvarResult->vt = VT_I4;
	o_pvarResult->lVal = 0;
	return S_OK;
}
